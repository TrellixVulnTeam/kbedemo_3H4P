//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class KBEngine_DbgWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(KBEngine.Dbg), typeof(System.Object));
		L.RegFunction("getHead", getHead);
		L.RegFunction("INFO_MSG", INFO_MSG);
		L.RegFunction("DEBUG_MSG", DEBUG_MSG);
		L.RegFunction("WARNING_MSG", WARNING_MSG);
		L.RegFunction("ERROR_MSG", ERROR_MSG);
		L.RegFunction("profileStart", profileStart);
		L.RegFunction("profileEnd", profileEnd);
		L.RegFunction("New", _CreateKBEngine_Dbg);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("debugLevel", get_debugLevel, set_debugLevel);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateKBEngine_Dbg(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				KBEngine.Dbg obj = new KBEngine.Dbg();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: KBEngine.Dbg.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getHead(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = KBEngine.Dbg.getHead();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int INFO_MSG(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			object arg0 = ToLua.ToVarObject(L, 1);
			KBEngine.Dbg.INFO_MSG(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DEBUG_MSG(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			object arg0 = ToLua.ToVarObject(L, 1);
			KBEngine.Dbg.DEBUG_MSG(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WARNING_MSG(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			object arg0 = ToLua.ToVarObject(L, 1);
			KBEngine.Dbg.WARNING_MSG(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ERROR_MSG(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			object arg0 = ToLua.ToVarObject(L, 1);
			KBEngine.Dbg.ERROR_MSG(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int profileStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			KBEngine.Dbg.profileStart(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int profileEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			KBEngine.Dbg.profileEnd(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_debugLevel(IntPtr L)
	{
		try
		{
			ToLua.Push(L, KBEngine.Dbg.debugLevel);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_debugLevel(IntPtr L)
	{
		try
		{
			KBEngine.DEBUGLEVEL arg0 = (KBEngine.DEBUGLEVEL)ToLua.CheckObject(L, 2, typeof(KBEngine.DEBUGLEVEL));
			KBEngine.Dbg.debugLevel = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

