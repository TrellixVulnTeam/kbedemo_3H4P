//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIManager_WindowInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIManager.WindowInfo), typeof(System.Object));
		L.RegFunction("New", _CreateUIManager_WindowInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("depth", get_depth, set_depth);
		L.RegVar("showtype", get_showtype, set_showtype);
		L.RegVar("table", get_table, set_table);
		L.RegVar("win", get_win, set_win);
		L.RegVar("pak_id", get_pak_id, set_pak_id);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUIManager_WindowInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UIManager.WindowInfo obj = new UIManager.WindowInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UIManager.WindowInfo.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_depth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			int ret = obj.depth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index depth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showtype(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			UIManager.ShowType ret = obj.showtype;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showtype on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_table(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			LuaInterface.LuaTable ret = obj.table;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index table on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_win(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			FairyGUI.LuaWindow ret = obj.win;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index win on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pak_id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			string ret = obj.pak_id;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pak_id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_depth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.depth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index depth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showtype(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			UIManager.ShowType arg0 = (UIManager.ShowType)ToLua.CheckObject(L, 2, typeof(UIManager.ShowType));
			obj.showtype = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showtype on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_table(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.table = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index table on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_win(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			FairyGUI.LuaWindow arg0 = (FairyGUI.LuaWindow)ToLua.CheckObject<FairyGUI.LuaWindow>(L, 2);
			obj.win = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index win on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pak_id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager.WindowInfo obj = (UIManager.WindowInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.pak_id = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pak_id on a nil value");
		}
	}
}

