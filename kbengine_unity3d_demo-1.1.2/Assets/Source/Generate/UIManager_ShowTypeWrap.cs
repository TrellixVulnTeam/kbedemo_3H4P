//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIManager_ShowTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UIManager.ShowType));
		L.RegVar("Normal", get_Normal, null);
		L.RegVar("PopTips", get_PopTips, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UIManager.ShowType>.Check = CheckType;
		StackTraits<UIManager.ShowType>.Push = Push;
	}

	static void Push(IntPtr L, UIManager.ShowType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UIManager.ShowType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Normal(IntPtr L)
	{
		ToLua.Push(L, UIManager.ShowType.Normal);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PopTips(IntPtr L)
	{
		ToLua.Push(L, UIManager.ShowType.PopTips);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UIManager.ShowType o = (UIManager.ShowType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

