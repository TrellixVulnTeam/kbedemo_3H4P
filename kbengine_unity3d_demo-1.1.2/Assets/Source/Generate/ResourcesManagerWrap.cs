//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ResourcesManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ResourcesManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("LoadManiFest", LoadManiFest);
		L.RegFunction("LoadResource", LoadResource);
		L.RegFunction("LoadUIAssetBundle", LoadUIAssetBundle);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("all_manifest", get_all_manifest, set_all_manifest);
		L.RegFunction("LoadCompleteCallback", ResourcesManager_LoadCompleteCallback);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadManiFest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ResourcesManager obj = (ResourcesManager)ToLua.CheckObject<ResourcesManager>(L, 1);
			System.Collections.IEnumerator o = obj.LoadManiFest();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadResource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			ResourcesManager obj = (ResourcesManager)ToLua.CheckObject<ResourcesManager>(L, 1);
			string[] arg0 = ToLua.CheckStringArray(L, 2);
			ResourcesManager.LoadCompleteCallback arg1 = (ResourcesManager.LoadCompleteCallback)ToLua.CheckDelegate<ResourcesManager.LoadCompleteCallback>(L, 3);
			object arg2 = ToLua.ToVarObject(L, 4);
			obj.LoadResource(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadUIAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			UnityEngine.AssetBundle o = ResourcesManager.LoadUIAssetBundle(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_all_manifest(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, ResourcesManager.all_manifest);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_all_manifest(IntPtr L)
	{
		try
		{
			UnityEngine.AssetBundleManifest arg0 = (UnityEngine.AssetBundleManifest)ToLua.CheckObject(L, 2, typeof(UnityEngine.AssetBundleManifest));
			ResourcesManager.all_manifest = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResourcesManager_LoadCompleteCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<ResourcesManager.LoadCompleteCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<ResourcesManager.LoadCompleteCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

