//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ConstWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("Const");
		L.RegFunction("md5file", md5file);
		L.RegVar("Update", get_Update, set_Update);
		L.RegVar("OPEN_LOG", get_OPEN_LOG, set_OPEN_LOG);
		L.RegVar("OPEN_PROFILER", get_OPEN_PROFILER, set_OPEN_PROFILER);
		L.RegVar("ProjectName", get_ProjectName, set_ProjectName);
		L.RegVar("Update_Url", get_Update_Url, set_Update_Url);
		L.RegVar("endname", get_endname, set_endname);
		L.RegVar("IS_EDITOR_MODE", get_IS_EDITOR_MODE, null);
		L.RegVar("DataPath", get_DataPath, null);
		L.RegVar("AppContentPath", get_AppContentPath, null);
		L.RegVar("osDir", get_osDir, null);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int md5file(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			string o = Const.md5file(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Update(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.Update);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OPEN_LOG(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.OPEN_LOG);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OPEN_PROFILER(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.OPEN_PROFILER);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProjectName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.ProjectName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Update_Url(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.Update_Url);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_endname(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.endname);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IS_EDITOR_MODE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.IS_EDITOR_MODE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DataPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.DataPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AppContentPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.AppContentPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_osDir(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.osDir);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Update(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.Update = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OPEN_LOG(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.OPEN_LOG = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OPEN_PROFILER(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.OPEN_PROFILER = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ProjectName(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.ProjectName = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Update_Url(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.Update_Url = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_endname(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.endname = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

